spring.datasource.url=jdbc:mysql://localhost:3306/crm?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=always

# spring.mvc.throw-exception-if-no-handler-found=true
# spring.web.resources.add-mappings=false


spring.security.oauth2.client.registration.google.client-id=18953379412-868j0cue3dh586d61qncvghbasvcrnah.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid, email, profile, https://www.googleapis.com/auth/gmail.readonly, https://www.googleapis.com/auth/drive, https://www.googleapis.com/auth/calendar
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth?access_type=offline
# Customize the login page URL to include access_type=offline
spring.security.oauth2.client.registration.google.authorization-uri-template=https://accounts.google.com/o/oauth2/auth?access_type=offline&response_type=code&client_id={clientId}&scope={scopes}&state={state}&redirect_uri={redirectUri}

weather.api.url=http://api.weatherapi.com/v1/current.json
weather.api.key=f0ad469bc1194ca8a57165558252003

app.base-url=http://localhost:8080/

company.name=Easy to build


# Ninah
# spring.datasource.url=jdbc:mysql://localhost:3306/crm?createDatabaseIfNotExist=true
# spring.datasource.username=root
# spring.datasource.password=root
# spring.jpa.hibernate.ddl-auto=none
# spring.sql.init.mode=always

# spring.security.oauth2.client.registration.google.client-id=18953379412-868j0cue3dh586d61qncvghbasvcrnah.apps.googleusercontent.com
# spring.security.oauth2.client.registration.google.client-secret=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
# spring.security.oauth2.client.registration.google.scope=openid,email,profile,https://www.googleapis.com/auth/gmail.readonly, https://www.googleapis.com/auth/drive, https://www.googleapis.com/auth/calendar
# spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
# spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
# spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
# # Customize the login page URL to include access_type=offline
# spring.security.oauth2.client.registration.google.authorization-uri-template=https://accounts.google.com/o/oauth2/auth?access_type=offline&response_type=code&client_id={clientId}&scope={scopes}&state={state}&redirect_uri={redirectUri}
# # spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com

# weather.api.url=http://api.weatherapi.com/v1/current.json
# weather.api.key=f0ad469bc1194ca8a57165558252003

# app.base-url=http://localhost:8080/

# company.name=Easy to build


















